version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: wcw-postgres
    environment:
      POSTGRES_DB: world_cup_wednesdays
      POSTGRES_USER: wcw_user
      POSTGRES_PASSWORD: wcw_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init:/docker-entrypoint-initdb.d
    networks:
      - wcw-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wcw_user -d world_cup_wednesdays"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: wcw-backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: world_cup_wednesdays
      DB_USER: wcw_user
      DB_PASSWORD: wcw_password
      JWT_SECRET: dev-secret-key-change-in-production
      JWT_EXPIRE: 7d
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - wcw-network
    command: npm run dev

  # Frontend (for development)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: wcw-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - wcw-network
    command: npm start

volumes:
  postgres_data:

networks:
  wcw-network:
    driver: bridge